generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String               @id @default(cuid())
  email               String               @unique
  firstName           String?
  lastName            String?
  imageUrl            String?
  role                GlobalRole           @default(ADMIN)
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  organizationMembers OrganizationMember[]

  @@map("Users")
}

model Organization {
  id        String               @id @default(cuid())
  name      String
  slug      String               @unique
  adminId   String               @unique
  imageUrl  String?
  createdAt DateTime             @default(now())
  updatedAt DateTime             @updatedAt
  members   OrganizationMember[]

  @@map("Organizations")
}

model OrganizationMember {
  id             String           @id @default(cuid())
  organizationId String
  userId         String
  role           OrgMemberRole    @default(MEMBER)
  status         MembershipStatus @default(PENDING)
  invitedAt      DateTime         @default(now())
  acceptedAt     DateTime?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([organizationId, userId])
  @@map("OrganizationMembers")
}

enum GlobalRole {
  ADMIN
  USER
}

enum OrgMemberRole {
  ADMIN
  CLIENT
  MEMBER
}

enum MembershipStatus {
  PENDING
  ACCEPTED
}
